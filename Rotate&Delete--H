//https://practice.geeksforgeeks.org/problems/rotate-and-delete/0
//dont create copy of a first array just reduce efective size ad rotate,after delete just move right side elements

import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
 {
	public static void main (String[] args)
	 {
	 try{
	 BufferedReader br=new BufferedReader(new InputStreamReader(System.in)); 
	 int loop=Integer.parseInt(br.readLine());
	 for(int t=0;t<loop;t++){
	  int ans=0;
	   int n=Integer.parseInt(br.readLine().trim());
	   String s[]=br.readLine().trim().split(" ");
	   List list=new ArrayList<Integer>();
	   for(int i=0;i<n;i++){
	       list.add(Integer.parseInt(s[i]));
	   }
	   for(int k=1;k<n;k++){
	   Collections.rotate(list,1);
	   if(list.size()-k>0)
       list.remove(list.size()-k);
       else
       list.remove(0);
	   }
	  System.out.println(list.get(0)); 
	 }
	 }
	 catch(Exception e){
	 e.printStackTrace();
	 }
 }

}

//...........................................2nd better solution ........................
import java.util.*;
import java.lang.*;
import java.io.*;
class GFG{
  public static void main(String[] args) {
    Scanner in = new Scanner(System.in);

    int T = in.nextInt();
    int n;

    for(int i = 0 ; i < T ; i++){
      n = in.nextInt();
      int arr[] = new int[n];     // array declaration

      for(int j = 0 ; j < n ; j++){
        arr[j]  = in.nextInt();
      }

      int length = arr.length;
      int iteration = 0;
      while(length != 1){
        //System.out.println("length " + length + " && " + "iteration " + iteration);

        rotate(arr, length);

        if (iteration < length){
          delete(arr, (length-1) - iteration, length);
        }else{
          delete(arr, 0, length);
        }

        length--;
        iteration++;
      }
      // when length is 1
      System.out.println(arr[0]);

    }
  }

  public static void rotate(int arr[], int length)  {

    int temp = arr[length - 1];

    // shift all the -INFINITE  terms to the right _> they should not participate in the rotation
    /// --> done that in the delte portion


    for(int i = length - 2 ; i >= 0 ; i--){   // actuall rotation
      arr[i+1] = arr[i];
    }

    arr[0] = temp;

    // after rotation

    /* for(int val : arr){
       System.out.print(val + " ");
       }
       System.out.println();
    */

  }

  public static void delete (int arr[], int pos, int length){
    //System.out.println("deleted at " +pos + " -> " + arr[pos] );

    arr[pos] = Integer.MIN_VALUE;
    for (int i = pos; i < length - 1 ; i++){  // using length variable to decrease the iteration in for loop,
      arr[i] = arr[i+1];                  // so no need to go, to end of the loop
      arr[i+1] = Integer.MIN_VALUE;
    }

  }

}
