// https://practice.geeksforgeeks.org/problems/maximum-of-all-subarrays-of-size-k/0
// https://docs.oracle.com/javase/7/docs/api/java/util/Deque.html#peek()
//https://www.geeksforgeeks.org/sliding-window-maximum-maximum-of-all-subarrays-of-size-k/

import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
 {
	public static void main (String[] args)
	 {
	  try{
	   BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
	   int loop=Integer.parseInt(br.readLine());
	   for(int t=0;t<loop;t++){
	     String s[]=br.readLine().trim().split(" ");    
	       int n=Integer.parseInt(s[0]);
	       int k=Integer.parseInt(s[1]);
	       int a[]=new int[n];
	    String s1[]=br.readLine().trim().split(" ");
	       for(int i=0;i<n;i++){
	          a[i]=Integer.parseInt(s1[i]);
	       }
    Deque<Integer> q=new LinkedList<Integer>();
         int i;
        for(i=0;i<k;i++){
            while(!q.isEmpty() && a[i]>=a[q.peekLast()])
            q.removeLast();
            
            q.addLast(i);
         }
         for(;i<n;i++)
         {
             System.out.print(a[q.peekFirst()]+" ");
             while(!q.isEmpty() && q.peekFirst()<=i-k)
             q.removeFirst();
             
             while(!q.isEmpty() && a[i]>=a[q.peekLast()])
             q.removeLast();
             
             q.addLast(i);
         }
              System.out.print(a[q.peekFirst()]);
         	  System.out.println();
	  }
	  }
	  catch(Exception e){
	      e.printStackTrace();
	  }
	 }
}
