//https://practice.geeksforgeeks.org/problems/minimize-the-heights/0



import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
 {
	public static void main (String[] args)
	 {
	 Scanner sc = new Scanner(System.in);
     int loop = sc.nextInt();
     for(int t=0;t<loop;t++){
        int k=sc.nextInt();
    	int n= sc.nextInt();
    	int a[]=new int[n];
                for(int i=0;i<n;i++){
                    a[i]=sc.nextInt();
                }
     // Sort all elements 
    Arrays.sort(a);
    // Initialize result 
    int ans=a[n-1]-a[0];
    int big=a[n-1]-k;
    int small=a[0]+k;
    if(big<small){
     int   temp=small;
        small=big;
        big=temp;
    }
     // Traverse middle elements 
    for(int i=1;i<n-1;i++){
        int add=a[i]+k;
        int sub=a[i]-k;
    // If both subtraction and addition ..
     // do not change diff
    if(sub>small || add<big)
    continue;
    // Either subtraction causes a smaller 
    // number or addition causes a greater 
    // number. Update small or big using 
    // greedy approach (If big - subtract 
    // causes smaller diff, update small 
    // Else update big)
    if(big-sub<add-small)
       small=sub;
    else{
        big=add;
    }   
    }
    System.out.println(Math.min(ans,big-small));            
}
}
}
