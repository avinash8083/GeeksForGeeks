// https://practice.geeksforgeeks.org/problems/print-a-binary-tree-in-vertical-order/1
//https://www.geeksforgeeks.org/print-binary-tree-vertical-order/

class BinaryTree
{
    static void verticalOrder(Node root)
    {
        TreeMap<Integer,ArrayList<Integer>> map=new TreeMap<Integer,ArrayList<Integer>>();
        getVerticalOrder(root,0,map);
        for(Map.Entry<Integer,ArrayList<Integer>> entry:map.entrySet())
           for(Integer j:entry.getValue())
        System.out.print(j+" ");
    }
    static void getVerticalOrder(Node node,int level,TreeMap<Integer,ArrayList<Integer>> map){
        if(node==null)
        return ;
        if(map.containsKey(level))
        map.get(level).add(node.data);
        else{
            ArrayList<Integer> list=new ArrayList<Integer>();
            list.add(node.data);
            map.put(level,list);
          }
        getVerticalOrder(node.left,level-1,map);
        getVerticalOrder(node.right,level+1,map);
    }
}
