//https://practice.geeksforgeeks.org/problems/rotten-oranges/0
// https://www.geeksforgeeks.org/minimum-time-required-so-that-all-oranges-become-rotten/


import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
 {
	public static void main (String[] args)
	 {
BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
try{
 int loop=Integer.parseInt(br.readLine());
 for(int t=0;t<loop;t++){
     
     String s[]=br.readLine().trim().split(" ");
      int r=Integer.parseInt(s[0]);
      int c=Integer.parseInt(s[1]);
      int arr[][]=new int[r][c];
      String m[]=br.readLine().trim().split(" ");
      int z=0;
      for(int i=0;i<r;i++){
      for(int j=0;j<c;j++){
              arr[i][j]=Integer.parseInt(m[z]);
              z++;
          }
         }
     Queue<Ele> q=new LinkedList<>();        
     		for (int i=0; i < r; i++) 
		for (int j=0; j < c; j++) 
			if (arr[i][j] == 2) 
				q.add(new Ele(i,j)); 
		//delimiter
		q.add(new Ele(-1,-1));       
         
while(!q.empty()){
    
}         
         
         
         
         
         
      System.out.println(arr[0][0]);
 }
 
    
     }
    catch(Exception e){
        e.printStackTrace();
     }
 }
 public static boolean isValid(int x,int y,int r,int c){
    if(0<=x && x<r && 0<=y && y<c) 
    return true;
    else 
    return false;
  }
 static boolean isDelim(Ele temp) 
	{ 
		return (temp.x == -1 && temp.y == -1); 
	}
	
 static boolean checkAll(int arr[][],int r,int c) 
	{ 
		for (int i=0; i<r; i++) 
			for (int j=0; j<r; j++) 
				if (arr[i][j] == 1) 
					return true; 
		return false; 
	}	
}
class Ele{
    int x;
    int y;
    Ele(int x,int y){
        this.x=x;
        this.y=y;
    }
}
