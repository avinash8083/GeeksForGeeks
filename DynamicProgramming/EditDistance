// https://practice.geeksforgeeks.org/problems/edit-distance/0

//................solution using  logest common subsequence...............................................................
import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
 {
	public static void main (String[] args)
	 {
        try{
       BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
       int loop=Integer.parseInt(br.readLine());
       for(int t=0;t<loop;t++){
           String a[]=br.readLine().trim().split(" ");       
           int x=Integer.parseInt(a[0]);   
           int y=Integer.parseInt(a[1]);
           String s[]=br.readLine().trim().split(" ");
           String s1=s[0];
           String s2=s[1];
           int arr[][]=new int[x+1][y+1];
	   //..........logic start ...................
           for(int i=0;i<x+1;i++){
               for(int j=0;j<y+1;j++){
                   if(i==0 || j==0)
                   arr[i][j]=0;
                  else if(s1.charAt(i-1)==s2.charAt(j-1))
                     arr[i][j]=arr[i-1][j-1]+1;
                  else
                   arr[i][j]=Math.max(arr[i-1][j],arr[i][j-1]);   
                   }
               }
	   //......................logic ends................................    
           if(x>y)
           System.out.println(y-arr[x][y]+Math.abs(x-y));
           else 
           System.out.println(y-arr[x][y]);
       }
        }
        catch(Exception e){
            e.printStackTrace();
        }
	 }
}
//...............................................................other correct solution .............................................
