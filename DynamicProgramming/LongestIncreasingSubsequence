//https://practice.geeksforgeeks.org/problems/longest-increasing-subsequence/0

//https://www.youtube.com/watch?v=CE2b_-XfVDk

// good question with dp logic 

import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
 {
	public static void main (String[] args)
 	 {
	 Scanner sc=new Scanner(System.in);
	 int count=sc.nextInt();
	 for(int k=0;k<count;k++)
    {    int length=0;
	     int l=sc.nextInt();
	     int arr[]=new int[l];
	     for(int j=0;j<l;j++){
	         arr[j]=sc.nextInt();
	     }
   int T[] = new int[arr.length];  	     
        for(int i=0; i < arr.length; i++){
                    T[i] = 1;
                }	  
                
                
         //logic starts.........................................      
        for(int i=1; i < arr.length; i++){
            for(int j=0; j < i; j++){
                if(arr[i] > arr[j] && T[j] + 1 > T[i]){
                        T[i] = T[j] + 1;
                }
            }
        }
      //logic ends ............................
      
      
      
         //find the index of max number in T 
        int maxIndex = 0;
        for(int i=0; i < T.length; i++){
            if(T[i] > T[maxIndex]){
                maxIndex = i;
            }
        }       	    
 
 System.out.println(T[maxIndex]);
 }

	     
}
}
