//https://practice.geeksforgeeks.org/problems/0-1-knapsack-problem/0

// no need to sort weight array 
// by default a[i][j] =0 by java defaut int value

import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
 {
	public static void main (String[] args)
	 {
	 try{    
	 BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
	int loop = Integer.parseInt(br.readLine());
	for(int t=0;t<loop;t++)
    	 {
    	    int m=Integer.parseInt(br.readLine());
    	    int mcap=Integer.parseInt(br.readLine());
    	    String a[] = br.readLine().trim().split(" ");
    	    String b[] = br.readLine().trim().split(" "); 
    	       int[] p = new int[m], w = new int[m];
		    for(int r=0; r<m; r++){
		    p[r] = Integer.parseInt(a[r]);
		    w[r] = Integer.parseInt(b[r]);
		    }
    	 int f[][]=new int[a.length+1][mcap+1];  
	 
	 //.....................................logic start .......................
    	    for(int i=1;i<=a.length;i++)
    	    {  for(int j=1;j<=mcap;j++){
    	        
                 if(w[i-1]>j)
            	   {
            	   f[i][j]=f[i-1][j];
            	   }
            	   else{
            	         f[i][j]=Math.max(f[i-1][j],f[i-1][j-w[i-1]]+p[i-1]);
            	     }
    	      }
    	    }
	 //............................logic end .................................
	 
    	    System.out.println(f[a.length][mcap]);
    	 }
	 }
	 catch(Exception e){
	     e.printStackTrace();
	 }
	     
	 }
}
