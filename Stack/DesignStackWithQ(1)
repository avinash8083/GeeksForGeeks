//https://practice.geeksforgeeks.org/problems/special-stack/1
//https://www.geeksforgeeks.org/design-a-stack-that-supports-getmin-in-o1-time-and-o1-extra-space/
// { Driver Code Starts
import java.util.Scanner;
import java.util.Stack;
class SpeStack{
	public static void main(String[] args){
		Scanner sc=new Scanner(System.in);
		int t=sc.nextInt();
		while(t-->0){
			int n=sc.nextInt();
			Stack<Integer> s=new Stack<>();
			GfG g=new GfG();
			while(!g.isFull(s,n)){
				g.push(sc.nextInt(),s);
			}
		System.out.println(g.min(s));
		}
	}
}// } Driver Code Ends
/*Complete the function(s) below*/
class GfG{
   static int  min;
	public void push(int x,Stack<Integer> s)
	{		if (s.isEmpty()) 
		{ 
			min = x; 
			s.push(x); 
			return; 
		} 
		if (x < min) 
		{
			s.push(2*x - min); 
			min = x; 
		} 
		else
			s.push(x); 
	}
	public int pop(Stack<Integer> s)
        {  int min=min(s);
           int pop=s.pop();
           if(pop<min){
            min=2*min-pop;
           }
           return pop;
	}
	public int min(Stack<Integer> s)
        {
          return min;
	}
	public boolean isFull(Stack<Integer>s, int n)
        {
           if(s.size()==n)
           return true;
           else
           return  false;
	}
	public boolean isEmpty(Stack<Integer>s)
        {
           if(s.size()==0)
           return true;
           else
           return false;
	}
}
